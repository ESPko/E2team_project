From 0ce36f04d314c5559c95a5eec2b018ccf06ea102 Mon Sep 17 00:00:00 2001
From: void-alive <sja9284@gmail.com>
Date: Tue, 18 Feb 2025 14:39:26 +0900
Subject: [PATCH] =?UTF-8?q?=EB=8C=93=EA=B8=80=20=EC=9E=91=EC=84=B1,=20?=
 =?UTF-8?q?=EC=82=AD=EC=A0=9C=20=EA=B8=B0=EB=8A=A5=20=EA=B5=AC=ED=98=84=20?=
 =?UTF-8?q?=EC=99=84=EB=A3=8C?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../controller/ReplyController.java           | 27 ++++++++++---
 .../repository/ReplyRepository.java           | 12 ++++++
 .../e2teamproject/service/ReplyService.java   |  4 ++
 .../service/ReplyServiceImpl.java             | 12 +++++-
 .../templates/board/crewDetailPage.html       | 38 +++++++++++++++----
 5 files changed, 79 insertions(+), 14 deletions(-)

diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
index 49fb4f1..d4ce53e 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
@@ -24,11 +24,7 @@ public class ReplyController {
   //  댓글 보기
   @ResponseBody
   @GetMapping("/list/{crewBoardIdx}")
-  public Object replyShow(@PathVariable("crewBoardIdx") int crewBoardIdx){
-//    List<ReplyEntity> replyList = replyService.replyShow(crewBoardIdx);
-//    Map<String, Object> result = new HashMap<>();
-//    result.put("replyList", replyList);
-//    System.out.println(result);
+  public Object replyShow(@PathVariable("crewBoardIdx") int crewBoardIdx) {
     List<ReplyDTO> replyList = replyService.replyShow(crewBoardIdx)
             .stream()
             .map(ReplyDTO::fromEntity)
@@ -36,6 +32,13 @@ public class ReplyController {
 
     Map<String, Object> result = new HashMap<>();
     result.put("replyList", replyList);
+
+    for (ReplyDTO replyDTO : replyList) {
+      System.out.println(replyDTO.getReplyIdx());
+      System.out.println(replyDTO.getComment());
+      System.out.println(replyDTO.getCreateDate());
+      System.out.println(replyDTO.getUserId());
+    }
     return result;
   }
 
@@ -46,4 +49,18 @@ public class ReplyController {
                          @PathVariable("replyWriteComment") String replyWriteComment) {
     replyService.replyWrite(crewBoardIdx, replyWriteComment);
   }
+
+  //  댓글 수정(아이디가 일치하는지?)
+  @ResponseBody
+  @PutMapping("/modify/{replyIdx}")
+  public void replyModify(@PathVariable("replyIdx") int replyIdx){
+//    replyService.replyModify();
+  }
+
+  //  댓글 삭제
+  @ResponseBody
+  @DeleteMapping("/delete/{replyIdx}")
+  public void replyDelete(@PathVariable("replyIdx") int replyIdx) {
+    replyService.replyDelete(replyIdx);
+  }
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
index 6dcb1bd..14e643e 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
@@ -22,4 +22,16 @@ public interface ReplyRepository extends JpaRepository<ReplyEntity, Integer> {
           "values (:crewBoardIdx, 2, :replyWriteComment)", nativeQuery = true)
   void replyWrite(@RequestParam("crewBoardIdx") int crewBoardIdx,
                   @RequestParam("replyWriteComment") String replyWriteComment);
+
+  //  댓글 수정
+  @Modifying
+  @Query("update ReplyEntity r set r.comment= :newReplyComment where r.reply_idx = :replyIdx")
+  void replyModify(@RequestParam("newReplyComment") String newReplyComment,
+                   @RequestParam("replyIdx") int replyIdx);
+
+  //  댓글 삭제
+  @Modifying
+  @Transactional
+  @Query("delete from ReplyEntity where reply_idx = :replyIdx")
+  void replyDelete(@RequestParam("replyIdx") int replyIdx);
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
index cc54e8c..d780674 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
@@ -1,6 +1,7 @@
 package bitc.fullstack503.e2teamproject.service;
 
 import bitc.fullstack503.e2teamproject.entity.ReplyEntity;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.bind.annotation.RequestParam;
 
 import java.util.List;
@@ -12,4 +13,7 @@ public interface ReplyService {
   //  댓글 쓰기
   void replyWrite(@RequestParam("crewBoardIdx") int crewBoardIdx,
                   @RequestParam("replyWriteComment") String replyWriteComment);
+
+  //  댓글 삭제
+  void replyDelete(@RequestParam("replyIdx") int replyIdx);
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
index 5f012d0..0fd4f18 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
@@ -4,6 +4,8 @@ import bitc.fullstack503.e2teamproject.entity.ReplyEntity;
 import bitc.fullstack503.e2teamproject.repository.ReplyRepository;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+import org.springframework.web.bind.annotation.RequestParam;
 
 import java.util.List;
 
@@ -15,7 +17,7 @@ public class ReplyServiceImpl implements ReplyService {
 
   //  댓글 보기
   @Override
-  public List<ReplyEntity> replyShow(int crewBoardIdx){
+  public List<ReplyEntity> replyShow(int crewBoardIdx) {
     return replyRepository.replyShow(crewBoardIdx);
   }
 
@@ -24,4 +26,12 @@ public class ReplyServiceImpl implements ReplyService {
   public void replyWrite(int crewBoardIdx, String replyWriteComment) {
     replyRepository.replyWrite(crewBoardIdx, replyWriteComment);
   }
+
+//  댓글 수정
+
+  //  댓글 삭제
+  @Override
+  public void replyDelete(int replyIdx) {
+    replyRepository.replyDelete(replyIdx);
+  }
 }
diff --git a/src/main/resources/templates/board/crewDetailPage.html b/src/main/resources/templates/board/crewDetailPage.html
index 6df8365..9c25b93 100644
--- a/src/main/resources/templates/board/crewDetailPage.html
+++ b/src/main/resources/templates/board/crewDetailPage.html
@@ -36,10 +36,13 @@
 
                   data.replyList.forEach(reply => {
                       let html = `<div style='padding: 10px 10px 0 10px;'>`;
+                      html += `<input type="hidden" value="${reply.replyIdx}" class="replyIdx" id="replyIdx">`
                       html += `<span style='font-weight: bold;' class='replyId'>${reply.userId}</span>`;
                       html += `<span style='font-size: small' class='replyWriteDate'>${reply.createDate}</span>`;
-                      html += `</div>`
                       html += `<div class='mt-2 replyContent' style='padding: 0 10px 10px 10px;'>${reply.comment}</div>`;
+                      html += `<button type="button" class="modifyReplyButton">수정</button>`;
+                      html += `<button type="button" class="deleteReplyButton">삭제</button>`;
+                      html += `</div>`
 
                       replyShowBox.append(html);
                   });
@@ -65,8 +68,32 @@
               });
           });
 
-      })
-      ;
+          // 댓글 수정
+          $(document).on("click", ".modifyReplyButton", function () {
+              console.log("댓글 수정 버튼");
+              let replyIdx = $(this).closest("div div").find(".replyIdx").val();
+              let replyUserId = $(this).closest("div div").find(".replyId").text();
+              console.log(`글 번호 : ${replyIdx}`);
+              console.log(`글쓴이 : ${replyUserId}`);
+          });
+
+          // 댓글 삭제
+          $(document).on("click", ".deleteReplyButton", function () {
+              let replyIdx = $(this).closest("div div").find(".replyIdx").val();
+              $.ajax({
+                  url: `/reply/delete/${replyIdx}`,
+                  type: 'delete',
+                  data: {"replyIdx": replyIdx},
+                  success: function () {
+                      alert("댓글 삭제 완료");
+                      location.reload();
+                  },
+                  error: function () {
+                      alert("댓글 삭제 실패");
+                  }
+              });
+          });
+      });
   </script>
 </head>
 <body>
@@ -126,11 +153,6 @@
         <i class="fa-regular fa-comment"></i> 댓글
       </div>
       <div class="mt-3 replyShowBox" style="border: 0.4px solid lightgray; border-radius: 5px;">
-        <!--        <div style="padding: 10px 10px 0 10px;">-->
-        <!--          <span style="font-weight: bold;" class="replyId">ID </span>-->
-        <!--          <span style="font-size: small" class="replyWriteDate"> 작성일</span>-->
-        <!--        </div>-->
-        <!--        <div class="mt-2 replyContent" style="padding: 0 10px 10px 10px;">review 내용</div>-->
       </div>
     </div>
     <div class="d-flex justify-content-between mt-5"
-- 
2.47.0.windows.2

