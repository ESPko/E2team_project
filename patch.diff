From d5fe773fb27909846a05c24a92f33768edd6af96 Mon Sep 17 00:00:00 2001
From: void-alive <sja9284@gmail.com>
Date: Tue, 18 Feb 2025 10:47:19 +0900
Subject: [PATCH] =?UTF-8?q?=EA=B3=B5=EC=A7=80=EC=82=AC=ED=95=AD=20?=
 =?UTF-8?q?=EB=8B=A4=EC=8B=9C=20=EB=B3=B4=EC=9D=B4=EA=B2=8C=20=ED=95=A8.?=
 =?UTF-8?q?=20=EA=B7=B8=EB=A6=AC=EA=B3=A0=20=EC=9D=B4=EB=B2=A4=ED=8A=B8,?=
 =?UTF-8?q?=20=EC=9D=B8=EC=9B=90=20=EB=AA=A8=EC=A7=91=20=EA=B2=8C=EC=8B=9C?=
 =?UTF-8?q?=ED=8C=90=EC=9D=98=20=EB=AA=A9=EB=A1=9D=20=EB=B2=84=ED=8A=BC?=
 =?UTF-8?q?=EC=9D=84=20=EB=88=84=EB=A5=B4=EB=A9=B4=20history.back()=20?=
 =?UTF-8?q?=EC=9D=84=20=ED=95=A0=20=EC=88=98=20=EC=9E=88=EB=8F=84=EB=A1=9D?=
 =?UTF-8?q?=20=ED=95=A8?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../controller/BoardController.java           | 13 ++++---
 .../controller/PlaceController.java           | 33 ++++++++--------
 .../repository/BoardRepository.java           | 13 +++----
 .../templates/board/crewDetailPage.html       | 26 +++++++++----
 .../resources/templates/board/crewPage.html   | 30 ++++++++++-----
 .../templates/board/crewWritePage.html        | 33 +++++++++++-----
 .../templates/board/eventDetailPage.html      | 25 ++++++++----
 .../resources/templates/board/eventPage.html  | 38 ++++++-------------
 .../resources/templates/board/mainPage.html   |  1 -
 .../templates/board/noticeDetailPage.html     | 20 +++++++---
 .../resources/templates/board/noticePage.html | 37 ++++++------------
 11 files changed, 146 insertions(+), 123 deletions(-)

diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java
index 75a36be..351a44e 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java
@@ -42,7 +42,6 @@ public class BoardController {
     return new ModelAndView("/login/profilePage");
   }
 
-
   // 회원가입 페이지
   @RequestMapping("/regist")
   public ModelAndView regist() {
@@ -55,14 +54,13 @@ public class BoardController {
     return new ModelAndView("/board/recommandPage");
   }
 
-
   //  메인 페이지
   @RequestMapping("/")
   public ModelAndView home() {
     return new ModelAndView("/board/mainPage");
   }
 
-  //  메인 페이지
+  //  메인 페이지2
   @RequestMapping("/detail")
   public ModelAndView mainDetail() {
     return new ModelAndView("/board/mainDetailPage");
@@ -80,7 +78,7 @@ public class BoardController {
   //  공지 네개씩만 보기
   @ResponseBody
   @RequestMapping("/notice/four")
-  public List<BoardEntity> noticeReadFour() {
+  public List<BoardEntity> noticeReadFour(){
     return boardService.findNoticeFour();
   }
 
@@ -101,7 +99,6 @@ public class BoardController {
     boardService.writeNotice(noticeTitle, noticeContents);
   }
 
-
   //  공지 수정하기
   @ResponseBody
   @PutMapping("/notice/update")
@@ -185,6 +182,12 @@ public class BoardController {
     return mav;
   }
 
+  //  인원 모집 쓰기 뷰
+  @RequestMapping("/crew/write")
+  public ModelAndView writeCrewView() {
+    return new ModelAndView("/board/crewWritePage");
+  }
+
   //  인원 모집 쓰기
   @ResponseBody
   @PostMapping("/crew/write")
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/PlaceController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/PlaceController.java
index cb5e82b..7fa1c25 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/PlaceController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/PlaceController.java
@@ -21,8 +21,7 @@ public class PlaceController {
   //  심지현 place 테스트용
   @RequestMapping("/jiHyunPlaceTest")
   public ModelAndView jiHyunPlaceTest() {
-    ModelAndView mav = new ModelAndView("/board/jiHyunPlaceTest");
-    return mav;
+    return new ModelAndView("/board/jiHyunPlaceTest");
   }
 
   //  선택한 지역, 나이, 사람 수에 따라서 결과 출력
@@ -71,7 +70,7 @@ public class PlaceController {
   @RequestMapping("/recommend/reviewHigh/{selectLocation}/{selectAge}/{selectPeople}")
   public List<PlaceDTO> reviewHigh(@PathVariable("selectLocation") String selectLocation,
                                    @PathVariable("selectAge") int selectAge,
-                                   @PathVariable("selectPeople") int selectPeople){
+                                   @PathVariable("selectPeople") int selectPeople) {
     System.out.println("리뷰 많은 순");
     List<PlaceDTO> showReviewHigh = placeService.findPlaceReviewMany(selectLocation, selectAge, selectPeople);
     for (PlaceDTO placeDTO : showReviewHigh) {
@@ -82,21 +81,21 @@ public class PlaceController {
     return showReviewHigh;
   }
 
-//  선택한 지역, 나이, 사람 수와 리뷰가 적은 순으로 출력
-@ResponseBody
-@RequestMapping("/recommend/reviewLess/{selectLocation}/{selectAge}/{selectPeople}")
-public List<PlaceDTO> reviewLess(@PathVariable("selectLocation") String selectLocation,
-                                 @PathVariable("selectAge") int selectAge,
-                                 @PathVariable("selectPeople") int selectPeople){
-  System.out.println("리뷰 적은 순");
-  List<PlaceDTO> showReviewLess = placeService.findPlaceReviewLess(selectLocation, selectAge, selectPeople);
-  for (PlaceDTO placeDTO : showReviewLess) {
-    System.out.println("이름 : " + placeDTO.getPlaceName());
-    System.out.println("별점 평균 : " + placeDTO.getAverageStar());
-    System.out.println("리뷰 수 : " + placeDTO.getReviewCount());
+  //  선택한 지역, 나이, 사람 수와 리뷰가 적은 순으로 출력
+  @ResponseBody
+  @RequestMapping("/recommend/reviewLess/{selectLocation}/{selectAge}/{selectPeople}")
+  public List<PlaceDTO> reviewLess(@PathVariable("selectLocation") String selectLocation,
+                                   @PathVariable("selectAge") int selectAge,
+                                   @PathVariable("selectPeople") int selectPeople){
+    System.out.println("리뷰 적은 순");
+    List<PlaceDTO> showReviewLess = placeService.findPlaceReviewLess(selectLocation, selectAge, selectPeople);
+    for (PlaceDTO placeDTO : showReviewLess) {
+      System.out.println("이름 : " + placeDTO.getPlaceName());
+      System.out.println("별점 평균 : " + placeDTO.getAverageStar());
+      System.out.println("리뷰 수 : " + placeDTO.getReviewCount());
+    }
+    return showReviewLess;
   }
-  return showReviewLess;
-}
 
   //  상위 세개 추천 항목 나오게
 //  @RequestMapping("/")
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/repository/BoardRepository.java b/src/main/java/bitc/fullstack503/e2teamproject/repository/BoardRepository.java
index 4b4be72..a922bd0 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/repository/BoardRepository.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/repository/BoardRepository.java
@@ -24,11 +24,11 @@ public interface BoardRepository extends JpaRepository<BoardEntity, Integer> {
   void queryWriteNotice(@Param("noticeTitle") String noticeTitle, @Param("noticeContents") String noticeContents);
 
   //  공지사항 찾아서 읽어오기
-  @Query("select b from BoardEntity as b where b.category = '공지사항'")
+  @Query("select b from BoardEntity as b where b.category = '공지사항' order by b.board_idx desc")
   List<BoardEntity> queryFindNotice();
 
   //  공지사항 네개씩 읽어오기
-  @Query("select b from BoardEntity as b where b.category='공지사항'")
+  @Query("select b from BoardEntity as b where b.category='공지사항' order by b.board_idx desc")
   List<BoardEntity> queryFindNoticeFour(Pageable pageable);
 
   //  공지사항 수정하기
@@ -55,11 +55,11 @@ public interface BoardRepository extends JpaRepository<BoardEntity, Integer> {
                        @Param("eventContentsCreate") String eventContentsCreate);
 
   //  이벤트 찾아서 읽어오기
-  @Query("select b from BoardEntity as b where b.category = '이벤트'")
+  @Query("select b from BoardEntity as b where b.category = '이벤트' order by b.board_idx desc")
   List<BoardEntity> queryFindEvent();
 
   //  이벤트 네개씩 읽어오기
-  @Query("select b from BoardEntity as b where b.category='이벤트'")
+  @Query("select b from BoardEntity as b where b.category='이벤트' order by b.board_idx desc")
   List<BoardEntity> queryFindEventFour(Pageable pageable);
 
   //  이벤트 수정하기
@@ -86,12 +86,9 @@ public interface BoardRepository extends JpaRepository<BoardEntity, Integer> {
                       @Param("crewContentsCreate") String crewContentsCreate);
 
   //    인원모집 찾아서 읽어오기
-  @Query("select b from BoardEntity as b where b.category = '인원모집'")
+  @Query("select b from BoardEntity as b where b.category = '인원모집' order by b.board_idx desc")
   List<BoardEntity> queryFindCrew();
 
-//  @Query("SELECT b FROM BoardEntity b ORDER BY b.board_idx DESC")
-//  List<BoardEntity> findAllByOrderByBoard_idxDesc();
-
   //  인원모집 수정하기
   @Modifying
   @Transactional
diff --git a/src/main/resources/templates/board/crewDetailPage.html b/src/main/resources/templates/board/crewDetailPage.html
index 8595e83..f12979f 100644
--- a/src/main/resources/templates/board/crewDetailPage.html
+++ b/src/main/resources/templates/board/crewDetailPage.html
@@ -11,8 +11,13 @@
           integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
           crossorigin="anonymous"></script>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
-
-
+  <script>
+    $(document).ready(function(){
+        $("#btn-list").on("click",function(){
+            history.back();
+        });
+    });
+  </script>
 </head>
 <body>
 <div th:replace="~{/layout/header :: projectheader}"></div>
@@ -31,24 +36,29 @@
         <div class="container-sm d-flex justify-content-between"
              style="border-radius: 5px 5px 0 0; border: solid 0.4px lightgray; height: 40px; align-items: center;">
           <div class="col-sm-8">제목
-            <input type="text" style="border-style: none; width: 450px;" readonly></div>
+            <input type="text" style="border-style: none; width: 450px;" readonly
+            th:value="${crew.title}"></div>
           <div class="col-sm-4">작성일
-            <input type="text" style="border-style: none; width: 180px;" readonly></div>
+            <input type="text" style="border-style: none; width: 180px;" readonly
+            th:value="${crew.createDate}"></div>
         </div>
         <div class="container-sm d-flex justify-content-between"
              style="border-radius: 0 0 5px 5px; border: solid 0.4px lightgray; border-top: none; height: 35px; align-items: center;">
           <div class="col-sm-8">작성자
-            <input type="text" style="border-style: none; width: 400px;" readonly></div>
+            <input type="text" style="border-style: none; width: 400px;" readonly
+            th:value="${crew.user.id}"></div>
           <div class="col-sm-2">조회
-            <input type="text" style="border-style: none; width: 50px;" readonly></div>
+            <input type="text" style="border-style: none; width: 50px;" readonly
+            th:value="${crew.hitCount}"></div>
           <div class="col-sm-2">추천
-            <input type="text" style="border-style: none; width: 50px;" readonly></div>
+            <input type="text" style="border-style: none; width: 50px;" readonly
+            th:value="${crew.likeCount}"></div>
         </div>
       </div>
 
       <div class=" mt-3 form-floating">
         <textarea class="form-control" name="contents" id="contents" style="height: 200px;" placeholder="내용을 입력하세요."
-                  readonly>
+                  readonly  th:text="${crew.contents}">
         </textarea>
         <label for="contents">글 내용</label>
       </div>
diff --git a/src/main/resources/templates/board/crewPage.html b/src/main/resources/templates/board/crewPage.html
index 6589253..906b3b5 100644
--- a/src/main/resources/templates/board/crewPage.html
+++ b/src/main/resources/templates/board/crewPage.html
@@ -11,8 +11,13 @@
           integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
           crossorigin="anonymous"></script>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
-
-
+  <script>
+      $(document).ready(function () {
+          $(".crewWriteButton").on("click", function () {
+              location.href = "/crew/write";
+          });
+      });
+  </script>
 </head>
 <body>
 <div th:replace="~{/layout/header :: projectheader}"></div>
@@ -34,19 +39,24 @@
         </tr>
         </thead>
         <tbody>
-        <tr>
-          <td class="col-1 text-center">1</td>
-          <td class="col-5"><a href="#" class="text-dark" style="text-decoration: none">제목1</a></td>
-          <td class="col-2 text-center">작성자1</td>
-          <td class="col-2 text-left">2025-02-02</td>
-          <td class="col-1 text-center">0</td>
-          <td class="col-1 text-center">0</td>
+        <tr th:each="findCrew : ${findCrewList}">
+          <td class="col-1 text-center" th:value="${findCrew.board_idx}" th:text="${findCrew.board_idx}">1</td>
+          <td class="col-5">
+            <a href="#" class="text-dark" style="text-decoration: none"
+               th:value="${findCrew.title}" th:text="${findCrew.title}"
+               th:href="@{/crew/{id}(id=${findCrew.board_idx})}">제목1</a>
+          </td>
+          <td class="col-2 text-center" th:value="${findCrew.user.user_idx}" th:text="${findCrew.user.user_idx}">작성자1
+          </td>
+          <td class="col-2 text-left" th:value="${findCrew.createDate}" th:text="${findCrew.createDate}">2025-02-02</td>
+          <td class="col-2 text-center" th:value="${findCrew.hitCount}" th:text="${findCrew.hitCount}">0</td>
+          <td class="col-2 text-center" th:Value="${findCrew.likeCount}" th:text="${findCrew.likeCount}">추천수</td>
         </tr>
         </tbody>
       </table>
     </div>
     <div class="container container-sm d-flex justify-content-end">
-      <button type="button" class="btn float-right"
+      <button type="button" class="btn float-right crewWriteButton"
               style="border-style: none; border-radius: 10px; background-color: #ffe8a1;">작성하기
       </button>
     </div>
diff --git a/src/main/resources/templates/board/crewWritePage.html b/src/main/resources/templates/board/crewWritePage.html
index a2cbfb7..a4f5a5d 100644
--- a/src/main/resources/templates/board/crewWritePage.html
+++ b/src/main/resources/templates/board/crewWritePage.html
@@ -11,8 +11,20 @@
           integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
           crossorigin="anonymous"></script>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
-
-
+  <script>
+    $(document).ready(function(){
+        $("#btn-list").on("click",function(){
+            console.log("btnList 누름");
+        });
+        // $("#btn-write").on("click",function(){
+        //     console.log("btnWrite 누름");
+        //     const crewTitleCreate = $("#crewTitleCreate").val();
+        //     console.log(crewTitleCreate);
+        //     const crewContentsCreate = $("#crewContentsCreate").val();
+        //     console.log(crewContentsCreate);
+        // });
+    });
+  </script>
 </head>
 <body>
 <div th:replace="~{/layout/header :: projectheader}"></div>
@@ -20,7 +32,7 @@
 <main class="container container-sm mt-5" style="width: 800px;">
   <section>
 
-    <form id="frm" action="#" method="post">
+    <form id="frm" action="#" method="post" th:action="@{/crew/write}">
       <input type="hidden" id="method" name="_method">
 
       <div>
@@ -31,22 +43,23 @@
       <div class="container d-flex justify-content-between align-items-center mt-5"
            style="border-style: none; border-radius: 5px; height: 40px;">
         <div class="col-sm-1 text-center align-items-center">제목</div>
-        <div class="col-sm-10"><input type="text" class="align-items-center" style="width: 625px; height: 30px; border-radius: 5px; border: solid 0.5px lightgray;"></div>
+        <div class="col-sm-10">
+          <input type="text" class="align-items-center crewTitleCreate"
+                 style="width: 625px; height: 30px; border-radius: 5px;
+                 border: solid 0.5px lightgray;" name="crewTitleCreate" id="crewTitleCreate">
+        </div>
       </div>
 
-
       <div class=" mt-3 form-floating">
-        <textarea class="form-control" name="contents" id="contents" style="height: 200px;" placeholder="내용을 입력하세요.">
+        <textarea class="form-control crewContentsCreate" name="crewContentsCreate" id="crewContentsCreate" style="height: 200px;" placeholder="내용을 입력하세요.">
         </textarea>
-        <label for="contents">글 내용</label>
+        <label for="crewContentsCreate">글 내용</label>
       </div>
-
-
     </form>
   </section>
   <div class="col-sm m-3 d-flex justify-content-between">
     <button type="button" class="btn btn-secondary" id="btn-list">목록</button>
-    <button type="button" class="btn" style="background-color: #bee5eb; border-style: none;" id="btn-write">게시</button>
+    <button type="submit" class="btn" style="background-color: #bee5eb; border-style: none;" id="btn-write">게시</button>
   </div>
 </main>
 
diff --git a/src/main/resources/templates/board/eventDetailPage.html b/src/main/resources/templates/board/eventDetailPage.html
index 830f197..1b75f9e 100644
--- a/src/main/resources/templates/board/eventDetailPage.html
+++ b/src/main/resources/templates/board/eventDetailPage.html
@@ -11,8 +11,13 @@
           integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
           crossorigin="anonymous"></script>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
-
-
+  <script>
+    $(document).ready(function(){
+        $("#btn-list").on("click",function(){
+            history.back();
+        });
+    });
+  </script>
 </head>
 <body>
 <div th:replace="~{/layout/header :: projectheader}"></div>
@@ -23,24 +28,30 @@
     <form id="frm" action="#" method="post">
       <input type="hidden" id="method" name="_method">
 
-      <div><h4>공지사항</h4></div>
+      <div>
+        <h4>이벤트</h4>
+      </div>
 
       <div class="container d-flex justify-content-between align-items-center"
            style="border-color: lightgray; border: solid 0.4px lightgray; border-radius: 5px; height: 40px;">
-        <div class="col-sm-8">번호. 글 제목</div>
-        <div class="col-sm-4">작성일</div>
+        <div class="col-sm-8">
+          <span th:value="${event.board_idx}" th:text="|번호 : ${event.board_idx}|">번호</span>
+          <span th:value="${event.title}" th:text="|제목 : ${event.title}|">제목</span>
+        </div>
+        <div class="col-sm-4" th:value="${event.createDate}" th:text="|작성일 : ${event.createDate}|">작성일</div>
       </div>
 
 
       <div class=" mt-3 form-floating">
-        <textarea class="form-control" name="contents" id="contents" style="height: 200px;" placeholder="내용을 입력하세요.">
+        <textarea class="form-control" name="contents" id="contents" style="height: 200px;" placeholder="내용을 입력하세요."
+                  th:value="${event.contents}" th:text="${event.contents}">
         </textarea>
         <label for="contents">글 내용</label>
       </div>
 
-
     </form>
   </section>
+
   <div class="col-sm m-3">
     <button type="button" class="btn btn-secondary" id="btn-list">목록</button>
   </div>
diff --git a/src/main/resources/templates/board/eventPage.html b/src/main/resources/templates/board/eventPage.html
index 5fd5168..14ad9d7 100644
--- a/src/main/resources/templates/board/eventPage.html
+++ b/src/main/resources/templates/board/eventPage.html
@@ -15,11 +15,15 @@
 
 </head>
 <body>
+<!--링크는 localhost:8080/event 입니다-->
 <div th:replace="~{/layout/header :: projectheader}"></div>
 
 <section class="container-fluid" style="margin-top: 10px; border-top: solid 1px; border-top-color: #bee5eb;">
   <div class="container-sm" style="width: 800px; padding-top: 10px; margin-top: 30px;">
-    <div><h4 style="font-weight: bold;">EVENT</h4><p>다양한 이벤트 소식을 알려드립니다.</p></div>
+    <div>
+      <h4 style="font-weight: bold;">EVENT</h4>
+      <p>다양한 이벤트 소식을 알려드립니다.</p>
+    </div>
     <div>
       <ul style="list-style: none; padding-left: 0">
         <li>
@@ -30,31 +34,13 @@
           </div>
         </li>
         <li>
-          <div class="container row d-flex justify-content-between" style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;">
-            <div class="col-1 align-items-center">번호</div>
-            <div class="col-8 align-items-center" style="font-weight: bold;"><a href="#" class="text-dark" style="text-decoration: none;">제목</a></div>
-            <div class="col-3" style="text-align: right;">작성일</div>
-          </div>
-        </li>
-        <li>
-          <div class="container row d-flex justify-content-between" style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;">
-            <div class="col-1 align-items-center">번호</div>
-            <div class="col-8 align-items-center" style="font-weight: bold;"><a href="#" class="text-dark" style="text-decoration: none;">제목</a></div>
-            <div class="col-3" style="text-align: right;">작성일</div>
-          </div>
-        </li>
-        <li>
-          <div class="container row d-flex justify-content-between" style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;">
-            <div class="col-1 align-items-center">번호</div>
-            <div class="col-8 align-items-center" style="font-weight: bold;"><a href="#" class="text-dark" style="text-decoration: none;">제목</a></div>
-            <div class="col-3" style="text-align: right;">작성일</div>
-          </div>
-        </li>
-        <li>
-          <div class="container row d-flex justify-content-between" style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;">
-            <div class="col-1 align-items-center">번호</div>
-            <div class="col-8 align-items-center" style="font-weight: bold;"><a href="#" class="text-dark" style="text-decoration: none;">제목</a></div>
-            <div class="col-3" style="text-align: right;">작성일</div>
+          <div class="container row d-flex justify-content-between" style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;" th:each="findEvent : ${findEventList}">
+            <div class="col-1 align-items-center" th:value="${findEvent.board_idx}" th:text="${findEvent.board_idx}">번호</div>
+            <div class="col-8 align-items-center" style="font-weight: bold;">
+              <a href="#" class="text-dark" style="text-decoration: none;"
+                 th:value="${findEvent.title}" th:text="${findEvent.title}" th:href="@{/event/{id}(id=${findEvent.board_idx})}">제목</a>
+            </div>
+            <div class="col-3" style="text-align: right;" th:value="${findEvent.createDate}" th:text="${findEvent.createDate}">작성일</div>
           </div>
         </li>
       </ul>
diff --git a/src/main/resources/templates/board/mainPage.html b/src/main/resources/templates/board/mainPage.html
index 4a952da..330432a 100644
--- a/src/main/resources/templates/board/mainPage.html
+++ b/src/main/resources/templates/board/mainPage.html
@@ -67,7 +67,6 @@
     });
   </script>
 
-
   <script>
     $(document).ready(function () {
       const noticeContainer = $(".noticeContainer");
diff --git a/src/main/resources/templates/board/noticeDetailPage.html b/src/main/resources/templates/board/noticeDetailPage.html
index 830f197..eccec2a 100644
--- a/src/main/resources/templates/board/noticeDetailPage.html
+++ b/src/main/resources/templates/board/noticeDetailPage.html
@@ -11,8 +11,13 @@
           integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
           crossorigin="anonymous"></script>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
-
-
+  <script>
+    $(document).ready(function(){
+        $("#btn-list").on("click",function(){
+            history.back();
+        });
+    });
+  </script>
 </head>
 <body>
 <div th:replace="~{/layout/header :: projectheader}"></div>
@@ -27,13 +32,16 @@
 
       <div class="container d-flex justify-content-between align-items-center"
            style="border-color: lightgray; border: solid 0.4px lightgray; border-radius: 5px; height: 40px;">
-        <div class="col-sm-8">번호. 글 제목</div>
-        <div class="col-sm-4">작성일</div>
+        <div class="col-sm-8">
+          <span th:value="${notice.board_idx}" th:text="|번호 : ${notice.board_idx}|">번호</span>
+          <span th:value="${notice.title}" th:text="|제목 : ${notice.title}|">제목</span>
+        </div>
+        <div class="col-sm-4" th:value="${notice.createDate}" th:text="|작성일 : ${notice.createDate}|">작성일</div>
       </div>
 
-
       <div class=" mt-3 form-floating">
-        <textarea class="form-control" name="contents" id="contents" style="height: 200px;" placeholder="내용을 입력하세요.">
+        <textarea class="form-control" name="contents" id="contents" style="height: 200px;" placeholder="내용을 입력하세요."
+        th:text="${notice.contents}">
         </textarea>
         <label for="contents">글 내용</label>
       </div>
diff --git a/src/main/resources/templates/board/noticePage.html b/src/main/resources/templates/board/noticePage.html
index 71764bf..1d962ea 100644
--- a/src/main/resources/templates/board/noticePage.html
+++ b/src/main/resources/templates/board/noticePage.html
@@ -30,31 +30,18 @@
           </div>
         </li>
         <li>
-          <div class="container row d-flex justify-content-between" style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;">
-            <div class="col-1 align-items-center">번호</div>
-            <div class="col-8 align-items-center" style="font-weight: bold;"><a href="#" class="text-dark" style="text-decoration: none;">제목</a></div>
-            <div class="col-3" style="text-align: right;">작성일</div>
-          </div>
-        </li>
-        <li>
-          <div class="container row d-flex justify-content-between" style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;">
-            <div class="col-1 align-items-center">번호</div>
-            <div class="col-8 align-items-center" style="font-weight: bold;"><a href="#" class="text-dark" style="text-decoration: none;">제목</a></div>
-            <div class="col-3" style="text-align: right;">작성일</div>
-          </div>
-        </li>
-        <li>
-          <div class="container row d-flex justify-content-between" style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;">
-            <div class="col-1 align-items-center">번호</div>
-            <div class="col-8 align-items-center" style="font-weight: bold;"><a href="#" class="text-dark" style="text-decoration: none;">제목</a></div>
-            <div class="col-3" style="text-align: right;">작성일</div>
-          </div>
-        </li>
-        <li>
-          <div class="container row d-flex justify-content-between" style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;">
-            <div class="col-1 align-items-center">번호</div>
-            <div class="col-8 align-items-center" style="font-weight: bold;"><a href="#" class="text-dark" style="text-decoration: none;">제목</a></div>
-            <div class="col-3" style="text-align: right;">작성일</div>
+          <div class="container row d-flex justify-content-between"
+               style="padding:20px 0; border-bottom: solid 0.3px #bee5eb;"
+          th:each="findNotice : ${findNoticeList}">
+            <div class="col-1 align-items-center"
+                 th:value="${findNotice.board_idx}" th:text="${findNotice.board_idx}">번호</div>
+            <div class="col-8 align-items-center" style="font-weight: bold;">
+              <a href="#" class="text-dark" style="text-decoration: none;"
+                 th:value="${findNotice.title}" th:text="${findNotice.title}"
+                 th:href="@{/notice/{id}(id=${findNotice.board_idx})}">제목</a>
+            </div>
+            <div class="col-3" style="text-align: right;"
+                 th:value="${findNotice.createDate}" th:text="${findNotice.createDate}">작성일</div>
           </div>
         </li>
       </ul>
-- 
2.47.0.windows.2

From 0d2bf405362d4a13afcc155a7cd1abed3af5ec26 Mon Sep 17 00:00:00 2001
From: void-alive <sja9284@gmail.com>
Date: Tue, 18 Feb 2025 11:07:54 +0900
Subject: [PATCH] =?UTF-8?q?=EC=9D=B4=EB=B2=A4=ED=8A=B8=20=EA=B8=80?=
 =?UTF-8?q?=EC=93=B0=EA=B8=B0=20=EA=B5=AC=ED=98=84=20=EC=99=84=EB=A3=8C?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../templates/board/crewWritePage.html        | 34 +++++++++++++------
 1 file changed, 23 insertions(+), 11 deletions(-)

diff --git a/src/main/resources/templates/board/crewWritePage.html b/src/main/resources/templates/board/crewWritePage.html
index a4f5a5d..1f9e674 100644
--- a/src/main/resources/templates/board/crewWritePage.html
+++ b/src/main/resources/templates/board/crewWritePage.html
@@ -16,13 +16,24 @@
         $("#btn-list").on("click",function(){
             console.log("btnList 누름");
         });
-        // $("#btn-write").on("click",function(){
-        //     console.log("btnWrite 누름");
-        //     const crewTitleCreate = $("#crewTitleCreate").val();
-        //     console.log(crewTitleCreate);
-        //     const crewContentsCreate = $("#crewContentsCreate").val();
-        //     console.log(crewContentsCreate);
-        // });
+        $("#btn-write").on("click", function(event){
+            event.preventDefault();
+
+            let formData = $("#frm").serialize();
+
+            $.ajax({
+                url: "/crew/write",
+                type: "POST",
+                data: formData,
+                success: function() {
+                    alert("글 작성 완료!");
+                    location.href = "/crew";
+                },
+                error: function() {
+                    alert("글 작성 실패!");
+                }
+            });
+        });
     });
   </script>
 </head>
@@ -55,12 +66,13 @@
         </textarea>
         <label for="crewContentsCreate">글 내용</label>
       </div>
+
+      <div class="col-sm m-3 d-flex justify-content-between">
+        <button type="button" class="btn btn-secondary" id="btn-list">목록</button>
+        <button type="submit" class="btn" style="background-color: #bee5eb; border-style: none;" id="btn-write">게시</button>
+      </div>
     </form>
   </section>
-  <div class="col-sm m-3 d-flex justify-content-between">
-    <button type="button" class="btn btn-secondary" id="btn-list">목록</button>
-    <button type="submit" class="btn" style="background-color: #bee5eb; border-style: none;" id="btn-write">게시</button>
-  </div>
 </main>
 
 <div th:replace="~{/layout/footer :: projectfooter}"></div>
-- 
2.47.0.windows.2

From c25cadde654666cb28a207d6dd35525c4695f7ef Mon Sep 17 00:00:00 2001
From: void-alive <sja9284@gmail.com>
Date: Tue, 18 Feb 2025 11:24:02 +0900
Subject: [PATCH] =?UTF-8?q?=EA=B3=B5=EC=A7=80=EC=82=AC=ED=95=AD,=20?=
 =?UTF-8?q?=EC=9D=B4=EB=B2=A4=ED=8A=B8,=20=EC=9D=B8=EC=9B=90=EB=AA=A8?=
 =?UTF-8?q?=EC=A7=91=20=ED=8E=98=EC=9D=B4=EC=A7=95=20=EC=B2=98=EB=A6=AC=20?=
 =?UTF-8?q?=EC=99=84=EB=A3=8C?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../controller/BoardController.java           | 27 +++++++++---------
 .../repository/BoardRepository.java           |  7 +++--
 .../e2teamproject/service/BoardService.java   | 11 ++++----
 .../service/BoardServiceImpl.java             | 25 ++++++++++++-----
 .../resources/templates/board/crewPage.html   | 23 +++++++++++++++
 .../resources/templates/board/eventPage.html  | 23 +++++++++++++++
 .../resources/templates/board/noticePage.html | 28 ++++++++++++++++++-
 7 files changed, 115 insertions(+), 29 deletions(-)

diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java
index 351a44e..0ed1560 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java
@@ -5,6 +5,7 @@ import bitc.fullstack503.e2teamproject.entity.BoardImageEntity;
 import bitc.fullstack503.e2teamproject.service.BoardImageService;
 import bitc.fullstack503.e2teamproject.service.BoardService;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.domain.Page;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
@@ -27,12 +28,12 @@ public class BoardController {
   @RequestMapping("/jiHyunCRUDTest")
   public ModelAndView jiHyunCRUDTest() {
     ModelAndView mav = new ModelAndView("/board/jiHyunCRUDTest");
-    List<BoardEntity> findNoticeList = boardService.findNotice();
-    List<BoardEntity> findEventList = boardService.findEvent();
-    List<BoardEntity> findCrewList = boardService.findCrew();
-    mav.addObject("findNoticeList", findNoticeList);
-    mav.addObject("findEventList", findEventList);
-    mav.addObject("findCrewList", findCrewList);
+//    List<BoardEntity> findNoticeList = boardService.findNotice(page);
+//    List<BoardEntity> findEventList = boardService.findEvent();
+//    List<BoardEntity> findCrewList = boardService.findCrew();
+//    mav.addObject("findNoticeList", findNoticeList);
+//    mav.addObject("findEventList", findEventList);
+//    mav.addObject("findCrewList", findCrewList);
     return mav;
   }
 
@@ -68,9 +69,9 @@ public class BoardController {
 
   //  공지 보기
   @RequestMapping("/notice")
-  public ModelAndView noticeRead() {
+  public ModelAndView noticeRead(@RequestParam(value = "page", defaultValue = "0") int page) {
     ModelAndView mav = new ModelAndView("/board/noticePage");
-    List<BoardEntity> findNoticeList = boardService.findNotice();
+    Page<BoardEntity> findNoticeList = boardService.findNotice(page);
     mav.addObject("findNoticeList", findNoticeList);
     return mav;
   }
@@ -78,7 +79,7 @@ public class BoardController {
   //  공지 네개씩만 보기
   @ResponseBody
   @RequestMapping("/notice/four")
-  public List<BoardEntity> noticeReadFour(){
+  public List<BoardEntity> noticeReadFour() {
     return boardService.findNoticeFour();
   }
 
@@ -117,9 +118,9 @@ public class BoardController {
 
   //  이벤트 보기
   @RequestMapping("/event")
-  public ModelAndView eventRead() {
+  public ModelAndView eventRead(@RequestParam(value = "page", defaultValue = "0") int page) {
     ModelAndView mav = new ModelAndView("/board/eventPage");
-    List<BoardEntity> findEventList = boardService.findEvent();
+    Page<BoardEntity> findEventList = boardService.findEvent(page);
     mav.addObject("findEventList", findEventList);
     return mav;
   }
@@ -166,9 +167,9 @@ public class BoardController {
 
   //  인원 모집 보기
   @RequestMapping("/crew")
-  public ModelAndView crewRead() {
+  public ModelAndView crewRead(@RequestParam(value = "page", defaultValue = "0") int page) {
     ModelAndView mav = new ModelAndView("/board/crewPage");
-    List<BoardEntity> findCrewList = boardService.findCrew();
+    Page<BoardEntity> findCrewList = boardService.findCrew(page);
     mav.addObject("findCrewList", findCrewList);
     return mav;
   }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/repository/BoardRepository.java b/src/main/java/bitc/fullstack503/e2teamproject/repository/BoardRepository.java
index a922bd0..ad4d646 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/repository/BoardRepository.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/repository/BoardRepository.java
@@ -1,6 +1,7 @@
 package bitc.fullstack503.e2teamproject.repository;
 
 import bitc.fullstack503.e2teamproject.entity.BoardEntity;
+import org.springframework.data.domain.Page;
 import org.springframework.data.domain.Pageable;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.Modifying;
@@ -25,7 +26,7 @@ public interface BoardRepository extends JpaRepository<BoardEntity, Integer> {
 
   //  공지사항 찾아서 읽어오기
   @Query("select b from BoardEntity as b where b.category = '공지사항' order by b.board_idx desc")
-  List<BoardEntity> queryFindNotice();
+  Page<BoardEntity> queryFindNotice(Pageable pageable);
 
   //  공지사항 네개씩 읽어오기
   @Query("select b from BoardEntity as b where b.category='공지사항' order by b.board_idx desc")
@@ -56,7 +57,7 @@ public interface BoardRepository extends JpaRepository<BoardEntity, Integer> {
 
   //  이벤트 찾아서 읽어오기
   @Query("select b from BoardEntity as b where b.category = '이벤트' order by b.board_idx desc")
-  List<BoardEntity> queryFindEvent();
+  Page<BoardEntity> queryFindEvent(Pageable pageable);
 
   //  이벤트 네개씩 읽어오기
   @Query("select b from BoardEntity as b where b.category='이벤트' order by b.board_idx desc")
@@ -87,7 +88,7 @@ public interface BoardRepository extends JpaRepository<BoardEntity, Integer> {
 
   //    인원모집 찾아서 읽어오기
   @Query("select b from BoardEntity as b where b.category = '인원모집' order by b.board_idx desc")
-  List<BoardEntity> queryFindCrew();
+  Page<BoardEntity> queryFindCrew(Pageable pageable);
 
   //  인원모집 수정하기
   @Modifying
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/BoardService.java b/src/main/java/bitc/fullstack503/e2teamproject/service/BoardService.java
index 7970811..e33e7bd 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/BoardService.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/BoardService.java
@@ -1,6 +1,7 @@
 package bitc.fullstack503.e2teamproject.service;
 
 import bitc.fullstack503.e2teamproject.entity.BoardEntity;
+import org.springframework.data.domain.Page;
 import org.springframework.web.bind.annotation.RequestParam;
 
 
@@ -8,7 +9,7 @@ import java.util.List;
 
 public interface BoardService {
   //  공지 읽기
-  List<BoardEntity> findNotice();
+  Page<BoardEntity> findNotice(int page);
 
   //  공지 네개씩만 나오게
   List<BoardEntity> findNoticeFour();
@@ -28,8 +29,8 @@ public interface BoardService {
   //  공지 삭제하기
   void deleteNotice(@RequestParam("noticeNumberDelete") int noticeNumberDelete);
 
-  //  이벤트 읽기
-  List<BoardEntity> findEvent();
+  //  이벤트 조회하기
+  Page<BoardEntity> findEvent(int page);
 
   //  이벤트 네개씩만 보기
   List<BoardEntity> findEventFour();
@@ -46,8 +47,8 @@ public interface BoardService {
   //  이벤트 삭제하기
   void deleteEvent(@RequestParam("eventNumberDelete") int eventNumberDelete);
 
-  //  인원 모집 읽기
-  List<BoardEntity> findCrew();
+  //  인원 모집 조회하기
+  Page<BoardEntity> findCrew(int page);
 
   //  인원 모집 쓰기
   void writeCrew(@RequestParam("crewTitleCreate") String crewTitleCreate,
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/BoardServiceImpl.java b/src/main/java/bitc/fullstack503/e2teamproject/service/BoardServiceImpl.java
index e3b0e39..96aa0cb 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/BoardServiceImpl.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/BoardServiceImpl.java
@@ -3,13 +3,15 @@ package bitc.fullstack503.e2teamproject.service;
 import bitc.fullstack503.e2teamproject.entity.BoardEntity;
 import bitc.fullstack503.e2teamproject.repository.BoardRepository;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.domain.Page;
 import org.springframework.data.domain.PageRequest;
 import org.springframework.data.domain.Pageable;
+import org.springframework.data.domain.Sort;
 import org.springframework.stereotype.Service;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import java.util.Optional;
 import java.util.Optional;
 
 @Service
@@ -25,8 +27,11 @@ public class BoardServiceImpl implements BoardService {
 
   //  공지 읽기
   @Override
-  public List<BoardEntity> findNotice() {
-    return boardRepository.queryFindNotice();
+  public Page<BoardEntity> findNotice(int page) {
+    List<Sort.Order> sorts = new ArrayList<>();
+    sorts.add(Sort.Order.desc("board_idx"));
+    Pageable pageable = PageRequest.of(page,10,Sort.by(sorts));
+    return boardRepository.queryFindNotice(pageable);
   }
 
   //  공지 네개씩만 나오게
@@ -64,8 +69,11 @@ public class BoardServiceImpl implements BoardService {
 
   //  이벤트 조회하기
   @Override
-  public List<BoardEntity> findEvent() {
-    return boardRepository.queryFindEvent();
+  public Page<BoardEntity> findEvent(int page) {
+    List<Sort.Order> sorts = new ArrayList<>();
+    sorts.add(Sort.Order.desc("board_idx"));
+    Pageable pageable = PageRequest.of(page,10,Sort.by(sorts));
+    return boardRepository.queryFindEvent(pageable);
   }
 
   //  이벤트 네개씩만 보기
@@ -95,8 +103,11 @@ public class BoardServiceImpl implements BoardService {
 
   //  인원 모집 조회하기
   @Override
-  public List<BoardEntity> findCrew() {
-    return boardRepository.queryFindCrew();
+  public Page<BoardEntity> findCrew(int page) {
+    List<Sort.Order> sorts = new ArrayList<>();
+    sorts.add(Sort.Order.desc("board_idx"));
+    Pageable pageable = PageRequest.of(page,10,Sort.by(sorts));
+    return boardRepository.queryFindCrew(pageable);
   }
 
   //  인원 모집 쓰기
diff --git a/src/main/resources/templates/board/crewPage.html b/src/main/resources/templates/board/crewPage.html
index 906b3b5..d8cef05 100644
--- a/src/main/resources/templates/board/crewPage.html
+++ b/src/main/resources/templates/board/crewPage.html
@@ -60,6 +60,29 @@
               style="border-style: none; border-radius: 10px; background-color: #ffe8a1;">작성하기
       </button>
     </div>
+
+    <!-- 페이징처리 시작 -->
+    <div th:if="${!findCrewList.isEmpty()}">
+      <ul class="pagination justify-content-center">
+        <li class="page-item" th:classappend="${!findCrewList.hasPrevious} ? 'disabled'">
+          <a class="page-link"
+             th:href="@{|?page=${findCrewList.number-1}|}">
+            <span>이전</span>
+          </a>
+        </li>
+        <li th:each="page: ${#numbers.sequence(0, findCrewList.totalPages-1)}"
+            th:classappend="${page == findCrewList.number} ? 'active'"
+            class="page-item">
+          <a th:text="${page}" class="page-link" th:href="@{|?page=${page}|}"></a>
+        </li>
+        <li class="page-item" th:classappend="${!findCrewList.hasNext} ? 'disabled'">
+          <a class="page-link" th:href="@{|?page=${findCrewList.number+1}|}">
+            <span>다음</span>
+          </a>
+        </li>
+      </ul>
+    </div>
+    <!-- 페이징처리 끝 -->
   </div>
 </section>
 
diff --git a/src/main/resources/templates/board/eventPage.html b/src/main/resources/templates/board/eventPage.html
index 14ad9d7..2b9515c 100644
--- a/src/main/resources/templates/board/eventPage.html
+++ b/src/main/resources/templates/board/eventPage.html
@@ -44,6 +44,29 @@
           </div>
         </li>
       </ul>
+
+      <!-- 페이징처리 시작 -->
+      <div th:if="${!findEventList.isEmpty()}">
+        <ul class="pagination justify-content-center">
+          <li class="page-item" th:classappend="${!findEventList.hasPrevious} ? 'disabled'">
+            <a class="page-link"
+               th:href="@{|?page=${findEventList.number-1}|}">
+              <span>이전</span>
+            </a>
+          </li>
+          <li th:each="page: ${#numbers.sequence(0, findEventList.totalPages-1)}"
+              th:classappend="${page == findEventList.number} ? 'active'"
+              class="page-item">
+            <a th:text="${page}" class="page-link" th:href="@{|?page=${page}|}"></a>
+          </li>
+          <li class="page-item" th:classappend="${!findEventList.hasNext} ? 'disabled'">
+            <a class="page-link" th:href="@{|?page=${findEventList.number+1}|}">
+              <span>다음</span>
+            </a>
+          </li>
+        </ul>
+      </div>
+      <!-- 페이징처리 끝 -->
     </div>
   </div>
 </section>
diff --git a/src/main/resources/templates/board/noticePage.html b/src/main/resources/templates/board/noticePage.html
index 1d962ea..5c643e3 100644
--- a/src/main/resources/templates/board/noticePage.html
+++ b/src/main/resources/templates/board/noticePage.html
@@ -19,7 +19,10 @@
 
 <section class="container-fluid" style="margin-top: 10px; border-top: solid 1px; border-top-color: #bee5eb;">
   <div class="container-sm" style="width: 800px; padding-top: 10px; margin-top: 30px;">
-    <div><h4 style="font-weight: bold;">공지사항</h4><p>다양한 소식을 알려드립니다.</p></div>
+    <div>
+      <h4 style="font-weight: bold;">공지사항</h4>
+      <p>다양한 소식을 알려드립니다.</p>
+    </div>
     <div>
       <ul style="list-style: none; padding-left: 0">
         <li>
@@ -45,6 +48,29 @@
           </div>
         </li>
       </ul>
+
+      <!-- 페이징처리 시작 -->
+      <div th:if="${!findNoticeList.isEmpty()}">
+        <ul class="pagination justify-content-center">
+          <li class="page-item" th:classappend="${!findNoticeList.hasPrevious} ? 'disabled'">
+            <a class="page-link"
+               th:href="@{|?page=${findNoticeList.number-1}|}">
+              <span>이전</span>
+            </a>
+          </li>
+          <li th:each="page: ${#numbers.sequence(0, findNoticeList.totalPages-1)}"
+              th:classappend="${page == findNoticeList.number} ? 'active'"
+              class="page-item">
+            <a th:text="${page}" class="page-link" th:href="@{|?page=${page}|}"></a>
+          </li>
+          <li class="page-item" th:classappend="${!findNoticeList.hasNext} ? 'disabled'">
+            <a class="page-link" th:href="@{|?page=${findNoticeList.number+1}|}">
+              <span>다음</span>
+            </a>
+          </li>
+        </ul>
+      </div>
+      <!-- 페이징처리 끝 -->
     </div>
   </div>
 </section>
-- 
2.47.0.windows.2

From ae7a3aabf99d2687ee42aac91bbc578a2ef5bf33 Mon Sep 17 00:00:00 2001
From: void-alive <sja9284@gmail.com>
Date: Tue, 18 Feb 2025 11:59:21 +0900
Subject: [PATCH] =?UTF-8?q?=EB=8C=93=EA=B8=80=20=EC=93=B0=EA=B8=B0=20?=
 =?UTF-8?q?=EA=B8=B0=EB=8A=A5=20=EA=B5=AC=ED=98=84=20=EC=99=84=EB=A3=8C?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../controller/ReplyController.java           | 15 +++-
 .../repository/ReplyRepository.java           | 12 +++
 .../e2teamproject/service/ReplyService.java   |  2 +
 .../service/ReplyServiceImpl.java             |  5 ++
 .../templates/board/crewDetailPage.html       | 79 +++++++++++++------
 5 files changed, 86 insertions(+), 27 deletions(-)

diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
index 745f6e3..e249ad8 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
@@ -3,8 +3,11 @@ package bitc.fullstack503.e2teamproject.controller;
 import bitc.fullstack503.e2teamproject.service.ReplyService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.*;
 
+import java.nio.file.Path;
+
+@RestController
 @Controller
 @RequestMapping("/reply")
 public class ReplyController {
@@ -12,8 +15,12 @@ public class ReplyController {
   @Autowired
   private ReplyService replyService;
 
-  @RequestMapping("/")
-  public String reply() {
-    return "reply";
+  @ResponseBody
+  @PostMapping("/write/{crewBoardIdx}/{replyWriteComment}")
+  public void replyWrite(@PathVariable("crewBoardIdx") int crewBoardIdx,
+                         @PathVariable("replyWriteComment") String replyWriteComment) {
+    System.out.println(crewBoardIdx);
+    System.out.println(replyWriteComment);
+    replyService.writeReply(crewBoardIdx, replyWriteComment);
   }
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
index 262896e..a0fdc5b 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
@@ -2,6 +2,18 @@ package bitc.fullstack503.e2teamproject.repository;
 
 import bitc.fullstack503.e2teamproject.entity.ReplyEntity;
 import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.Modifying;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.transaction.annotation.Transactional;
+import org.springframework.web.bind.annotation.RequestParam;
 
 public interface ReplyRepository extends JpaRepository<ReplyEntity, Integer> {
+
+  //  댓글 쓰기
+  @Modifying
+  @Transactional
+  @Query(value = "insert into reply (reply_board_idx, reply_user_idx, comment)" +
+          "values (:crewBoardIdx, 2, :replyWriteComment)", nativeQuery = true)
+  void writeReply(@RequestParam("crewBoardIdx") int crewBoardIdx,
+                  @RequestParam("replyWriteComment") String replyWriteComment);
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
index 7e88a05..124e2bf 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
@@ -1,4 +1,6 @@
 package bitc.fullstack503.e2teamproject.service;
 
 public interface ReplyService {
+//  댓글 쓰기
+  void writeReply(int crewBoardIdx, String replyWriteComment);
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
index ec0dcb3..b71cf27 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
@@ -9,4 +9,9 @@ public class ReplyServiceImpl implements ReplyService {
 
   @Autowired
   private ReplyRepository replyRepository;
+
+  @Override
+  public void writeReply(int crewBoardIdx, String replyWriteComment){
+    replyRepository.writeReply(crewBoardIdx, replyWriteComment);
+  }
 }
diff --git a/src/main/resources/templates/board/crewDetailPage.html b/src/main/resources/templates/board/crewDetailPage.html
index f12979f..dc2d6f0 100644
--- a/src/main/resources/templates/board/crewDetailPage.html
+++ b/src/main/resources/templates/board/crewDetailPage.html
@@ -12,19 +12,42 @@
           crossorigin="anonymous"></script>
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
   <script>
-    $(document).ready(function(){
-        $("#btn-list").on("click",function(){
-            history.back();
-        });
-    });
+      $(document).ready(function () {
+          const crewBoardIdx = $(".crewBoardIdx").val();
+          console.log(crewBoardIdx);
+
+          $("#btn-list").on("click", function () {
+              history.back();
+          });
+          $("#btn-write").on("click", function () {
+              location.href = "/crew/write";
+          });
+          $("#replyWriteButton").on("click", function () {
+              const replyWriteComment = $("#replyWriteComment").val();
+              console.log(replyWriteComment);
+
+              $.ajax({
+                  url: `/reply/write/${crewBoardIdx}/${replyWriteComment}`,
+                  type: 'post',
+                  data: {"crewBoardIdx": crewBoardIdx, "replyWriteComment": replyWriteComment},
+                  // success: function () {
+                  //     alert("공지 등록 완료");
+                  //     location.reload();
+                  // },
+                  // error: function () {
+                  //     alert("공지 등록 완료");
+                  // }
+              });
+          });
+      });
   </script>
 </head>
 <body>
 <div th:replace="~{/layout/header :: projectheader}"></div>
 
 <main class="container container-sm mt-5" style="width: 800px;">
+  <!--인원모집 상세보기-->
   <section>
-
     <form id="frm" action="#" method="post">
       <input type="hidden" id="method" name="_method">
 
@@ -35,30 +58,30 @@
       <div class="mt-4">
         <div class="container-sm d-flex justify-content-between"
              style="border-radius: 5px 5px 0 0; border: solid 0.4px lightgray; height: 40px; align-items: center;">
+          <input type="hidden" th:value="${crew.board_idx}" class="crewBoardIdx">
           <div class="col-sm-8">제목
-            <input type="text" style="border-style: none; width: 450px;" readonly
-            th:value="${crew.title}"></div>
+            <input type="text" style="border-style: none; width: 450px;" readonly th:value="${crew.title}">
+          </div>
           <div class="col-sm-4">작성일
-            <input type="text" style="border-style: none; width: 180px;" readonly
-            th:value="${crew.createDate}"></div>
+            <input type="text" style="border-style: none; width: 180px;" readonly th:value="${crew.createDate}">
+          </div>
         </div>
         <div class="container-sm d-flex justify-content-between"
              style="border-radius: 0 0 5px 5px; border: solid 0.4px lightgray; border-top: none; height: 35px; align-items: center;">
           <div class="col-sm-8">작성자
-            <input type="text" style="border-style: none; width: 400px;" readonly
-            th:value="${crew.user.id}"></div>
+            <input type="text" style="border-style: none; width: 400px;" readonly th:value="${crew.user.id}">
+          </div>
           <div class="col-sm-2">조회
-            <input type="text" style="border-style: none; width: 50px;" readonly
-            th:value="${crew.hitCount}"></div>
+            <input type="text" style="border-style: none; width: 50px;" readonly th:value="${crew.hitCount}">
+          </div>
           <div class="col-sm-2">추천
-            <input type="text" style="border-style: none; width: 50px;" readonly
-            th:value="${crew.likeCount}"></div>
+            <input type="text" style="border-style: none; width: 50px;" readonly th:value="${crew.likeCount}"></div>
         </div>
       </div>
 
       <div class=" mt-3 form-floating">
         <textarea class="form-control" name="contents" id="contents" style="height: 200px;" placeholder="내용을 입력하세요."
-                  readonly  th:text="${crew.contents}">
+                  readonly th:text="${crew.contents}">
         </textarea>
         <label for="contents">글 내용</label>
       </div>
@@ -69,21 +92,31 @@
     <button type="button" class="btn" style="background-color: #bee5eb;" id="btn-write">글쓰기</button>
   </div>
 
+  <!--  댓글-->
   <div class="mt-4">
     <div>
-      <div><i class="fa-regular fa-comment"></i> 댓글</div>
+      <div>
+        <i class="fa-regular fa-comment"></i> 댓글
+      </div>
       <div class="mt-3" style="border: 0.4px solid lightgray; border-radius: 5px;">
-        <div style="padding: 10px 10px 0 10px;"><span style="font-weight: bold;">ID </span><span
-          style="font-size: small"> 작성일</span></div>
+        <div style="padding: 10px 10px 0 10px;">
+          <span style="font-weight: bold;">ID </span>
+          <span style="font-size: small"> 작성일</span>
+        </div>
         <div class="mt-2" style="padding: 0 10px 10px 10px;">review 내용</div>
       </div>
     </div>
-    <div class="d-flex justify-content-between mt-5" style="background-color: #f5f5f5; border-style: none; border-radius: 5px; padding: 10px;">
+    <div class="d-flex justify-content-between mt-5"
+         style="background-color: #f5f5f5; border-style: none; border-radius: 5px; padding: 10px;">
       <div class="col-sm-10 d-flex justify-content-center">
-        <textarea style="width: 628.33px; height: 66px; border-radius: 5px; border-style: none; padding: 0;"></textarea>
+        <textarea style="width: 628.33px; height: 66px; border-radius: 5px; border-style: none; padding: 0;"
+                  class="replyWriteComment" id="replyWriteComment" name="replyWriteComment"></textarea>
       </div>
       <div class="col-sm-2 d-flex justify-content-center">
-        <button type="button" style="border-style: none; border-radius: 5px; background-color: white; width: 77px; height: 70px;">등록</button>
+        <button type="button"
+                style="border-style: none; border-radius: 5px; background-color: white; width: 77px; height: 70px;"
+                class="replyWriteButton" id="replyWriteButton">등록
+        </button>
       </div>
     </div>
   </div>
-- 
2.47.0.windows.2

From f41c6e3f3ed5a7116ef35a13bad56efa8e442db8 Mon Sep 17 00:00:00 2001
From: void-alive <sja9284@gmail.com>
Date: Tue, 18 Feb 2025 12:40:18 +0900
Subject: [PATCH] =?UTF-8?q?=EB=8C=93=EA=B8=80=20=EB=B3=B4=EA=B8=B0=20?=
 =?UTF-8?q?=EA=B5=AC=ED=98=84=20=EC=99=84=EB=A3=8C?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../e2teamproject/DTO/ReplyDTO.java           | 29 ++++++++++
 .../controller/ReplyController.java           | 29 +++++++++-
 .../repository/ReplyRepository.java           |  8 ++-
 .../e2teamproject/service/ReplyService.java   | 13 ++++-
 .../service/ReplyServiceImpl.java             | 14 ++++-
 .../templates/board/crewDetailPage.html       | 57 ++++++++++++++-----
 6 files changed, 127 insertions(+), 23 deletions(-)
 create mode 100644 src/main/java/bitc/fullstack503/e2teamproject/DTO/ReplyDTO.java

diff --git a/src/main/java/bitc/fullstack503/e2teamproject/DTO/ReplyDTO.java b/src/main/java/bitc/fullstack503/e2teamproject/DTO/ReplyDTO.java
new file mode 100644
index 0000000..1e6f6ab
--- /dev/null
+++ b/src/main/java/bitc/fullstack503/e2teamproject/DTO/ReplyDTO.java
@@ -0,0 +1,29 @@
+package bitc.fullstack503.e2teamproject.DTO;
+
+import bitc.fullstack503.e2teamproject.entity.ReplyEntity;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+import java.time.LocalDateTime;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+public class ReplyDTO {
+  private int replyIdx;
+  private String userId;
+  private String comment;
+  private LocalDateTime createDate;
+
+  public static ReplyDTO fromEntity(ReplyEntity reply) {
+    return new ReplyDTO(
+            reply.getReply_idx(),
+            reply.getUserReply().getId(), // 여기서 UserEntity의 id 값 가져옴
+            reply.getComment(),
+            reply.getCreateDate()
+    );
+  }
+}
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
index e249ad8..49fb4f1 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
@@ -1,11 +1,17 @@
 package bitc.fullstack503.e2teamproject.controller;
 
+import bitc.fullstack503.e2teamproject.DTO.ReplyDTO;
+import bitc.fullstack503.e2teamproject.entity.ReplyEntity;
 import bitc.fullstack503.e2teamproject.service.ReplyService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.*;
 
 import java.nio.file.Path;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.stream.Collectors;
 
 @RestController
 @Controller
@@ -15,12 +21,29 @@ public class ReplyController {
   @Autowired
   private ReplyService replyService;
 
+  //  댓글 보기
+  @ResponseBody
+  @GetMapping("/list/{crewBoardIdx}")
+  public Object replyShow(@PathVariable("crewBoardIdx") int crewBoardIdx){
+//    List<ReplyEntity> replyList = replyService.replyShow(crewBoardIdx);
+//    Map<String, Object> result = new HashMap<>();
+//    result.put("replyList", replyList);
+//    System.out.println(result);
+    List<ReplyDTO> replyList = replyService.replyShow(crewBoardIdx)
+            .stream()
+            .map(ReplyDTO::fromEntity)
+            .collect(Collectors.toList());
+
+    Map<String, Object> result = new HashMap<>();
+    result.put("replyList", replyList);
+    return result;
+  }
+
+  //  댓글 쓰기
   @ResponseBody
   @PostMapping("/write/{crewBoardIdx}/{replyWriteComment}")
   public void replyWrite(@PathVariable("crewBoardIdx") int crewBoardIdx,
                          @PathVariable("replyWriteComment") String replyWriteComment) {
-    System.out.println(crewBoardIdx);
-    System.out.println(replyWriteComment);
-    replyService.writeReply(crewBoardIdx, replyWriteComment);
+    replyService.replyWrite(crewBoardIdx, replyWriteComment);
   }
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
index a0fdc5b..6dcb1bd 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
@@ -7,13 +7,19 @@ import org.springframework.data.jpa.repository.Query;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.bind.annotation.RequestParam;
 
+import java.util.List;
+
 public interface ReplyRepository extends JpaRepository<ReplyEntity, Integer> {
 
+  //  댓글 보기
+  @Query("select r from ReplyEntity r where r.boardReply.board_idx = :crewBoardIdx order by r.reply_idx desc")
+  List<ReplyEntity> replyShow(@RequestParam("crewBoardIdx") int crewBoardIdx);
+
   //  댓글 쓰기
   @Modifying
   @Transactional
   @Query(value = "insert into reply (reply_board_idx, reply_user_idx, comment)" +
           "values (:crewBoardIdx, 2, :replyWriteComment)", nativeQuery = true)
-  void writeReply(@RequestParam("crewBoardIdx") int crewBoardIdx,
+  void replyWrite(@RequestParam("crewBoardIdx") int crewBoardIdx,
                   @RequestParam("replyWriteComment") String replyWriteComment);
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
index 124e2bf..cc54e8c 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
@@ -1,6 +1,15 @@
 package bitc.fullstack503.e2teamproject.service;
 
+import bitc.fullstack503.e2teamproject.entity.ReplyEntity;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.List;
+
 public interface ReplyService {
-//  댓글 쓰기
-  void writeReply(int crewBoardIdx, String replyWriteComment);
+  //  댓글 보기
+  List<ReplyEntity> replyShow(int crewBoardIdx);
+
+  //  댓글 쓰기
+  void replyWrite(@RequestParam("crewBoardIdx") int crewBoardIdx,
+                  @RequestParam("replyWriteComment") String replyWriteComment);
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
index b71cf27..5f012d0 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
@@ -1,17 +1,27 @@
 package bitc.fullstack503.e2teamproject.service;
 
+import bitc.fullstack503.e2teamproject.entity.ReplyEntity;
 import bitc.fullstack503.e2teamproject.repository.ReplyRepository;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
+import java.util.List;
+
 @Service
 public class ReplyServiceImpl implements ReplyService {
 
   @Autowired
   private ReplyRepository replyRepository;
 
+  //  댓글 보기
+  @Override
+  public List<ReplyEntity> replyShow(int crewBoardIdx){
+    return replyRepository.replyShow(crewBoardIdx);
+  }
+
+  //  댓글 쓰기
   @Override
-  public void writeReply(int crewBoardIdx, String replyWriteComment){
-    replyRepository.writeReply(crewBoardIdx, replyWriteComment);
+  public void replyWrite(int crewBoardIdx, String replyWriteComment) {
+    replyRepository.replyWrite(crewBoardIdx, replyWriteComment);
   }
 }
diff --git a/src/main/resources/templates/board/crewDetailPage.html b/src/main/resources/templates/board/crewDetailPage.html
index dc2d6f0..6df8365 100644
--- a/src/main/resources/templates/board/crewDetailPage.html
+++ b/src/main/resources/templates/board/crewDetailPage.html
@@ -16,30 +16,57 @@
           const crewBoardIdx = $(".crewBoardIdx").val();
           console.log(crewBoardIdx);
 
+          // 목록 버튼 누르면 목록으로
           $("#btn-list").on("click", function () {
               history.back();
           });
+
+          // 쓰기 버튼 누르면 crew 쓰기로
           $("#btn-write").on("click", function () {
               location.href = "/crew/write";
           });
+
+          // 댓글 보기
+          $.ajax({
+              url: `/reply/list/${crewBoardIdx}`,
+              type: "get",
+              success: function (data) {
+                  let replyShowBox = $(".replyShowBox");
+                  replyShowBox.empty();
+
+                  data.replyList.forEach(reply => {
+                      let html = `<div style='padding: 10px 10px 0 10px;'>`;
+                      html += `<span style='font-weight: bold;' class='replyId'>${reply.userId}</span>`;
+                      html += `<span style='font-size: small' class='replyWriteDate'>${reply.createDate}</span>`;
+                      html += `</div>`
+                      html += `<div class='mt-2 replyContent' style='padding: 0 10px 10px 10px;'>${reply.comment}</div>`;
+
+                      replyShowBox.append(html);
+                  });
+              }
+          });
+
+          // 댓글 쓰기 누르면 댓글 쓰기
           $("#replyWriteButton").on("click", function () {
               const replyWriteComment = $("#replyWriteComment").val();
               console.log(replyWriteComment);
 
               $.ajax({
-                  url: `/reply/write/${crewBoardIdx}/${replyWriteComment}`,
+                  url: `/reply/write/ ${crewBoardIdx}/${replyWriteComment}`,
                   type: 'post',
                   data: {"crewBoardIdx": crewBoardIdx, "replyWriteComment": replyWriteComment},
-                  // success: function () {
-                  //     alert("공지 등록 완료");
-                  //     location.reload();
-                  // },
-                  // error: function () {
-                  //     alert("공지 등록 완료");
-                  // }
+                  success: function () {
+                      alert("댓글 등록 완료");
+                      location.reload();
+                  },
+                  error: function () {
+                      alert("댓글 등록 실패");
+                  }
               });
           });
-      });
+
+      })
+      ;
   </script>
 </head>
 <body>
@@ -98,12 +125,12 @@
       <div>
         <i class="fa-regular fa-comment"></i> 댓글
       </div>
-      <div class="mt-3" style="border: 0.4px solid lightgray; border-radius: 5px;">
-        <div style="padding: 10px 10px 0 10px;">
-          <span style="font-weight: bold;">ID </span>
-          <span style="font-size: small"> 작성일</span>
-        </div>
-        <div class="mt-2" style="padding: 0 10px 10px 10px;">review 내용</div>
+      <div class="mt-3 replyShowBox" style="border: 0.4px solid lightgray; border-radius: 5px;">
+        <!--        <div style="padding: 10px 10px 0 10px;">-->
+        <!--          <span style="font-weight: bold;" class="replyId">ID </span>-->
+        <!--          <span style="font-size: small" class="replyWriteDate"> 작성일</span>-->
+        <!--        </div>-->
+        <!--        <div class="mt-2 replyContent" style="padding: 0 10px 10px 10px;">review 내용</div>-->
       </div>
     </div>
     <div class="d-flex justify-content-between mt-5"
-- 
2.47.0.windows.2

From 0ce36f04d314c5559c95a5eec2b018ccf06ea102 Mon Sep 17 00:00:00 2001
From: void-alive <sja9284@gmail.com>
Date: Tue, 18 Feb 2025 14:39:26 +0900
Subject: [PATCH] =?UTF-8?q?=EB=8C=93=EA=B8=80=20=EC=9E=91=EC=84=B1,=20?=
 =?UTF-8?q?=EC=82=AD=EC=A0=9C=20=EA=B8=B0=EB=8A=A5=20=EA=B5=AC=ED=98=84=20?=
 =?UTF-8?q?=EC=99=84=EB=A3=8C?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../controller/ReplyController.java           | 27 ++++++++++---
 .../repository/ReplyRepository.java           | 12 ++++++
 .../e2teamproject/service/ReplyService.java   |  4 ++
 .../service/ReplyServiceImpl.java             | 12 +++++-
 .../templates/board/crewDetailPage.html       | 38 +++++++++++++++----
 5 files changed, 79 insertions(+), 14 deletions(-)

diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
index 49fb4f1..d4ce53e 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
@@ -24,11 +24,7 @@ public class ReplyController {
   //  댓글 보기
   @ResponseBody
   @GetMapping("/list/{crewBoardIdx}")
-  public Object replyShow(@PathVariable("crewBoardIdx") int crewBoardIdx){
-//    List<ReplyEntity> replyList = replyService.replyShow(crewBoardIdx);
-//    Map<String, Object> result = new HashMap<>();
-//    result.put("replyList", replyList);
-//    System.out.println(result);
+  public Object replyShow(@PathVariable("crewBoardIdx") int crewBoardIdx) {
     List<ReplyDTO> replyList = replyService.replyShow(crewBoardIdx)
             .stream()
             .map(ReplyDTO::fromEntity)
@@ -36,6 +32,13 @@ public class ReplyController {
 
     Map<String, Object> result = new HashMap<>();
     result.put("replyList", replyList);
+
+    for (ReplyDTO replyDTO : replyList) {
+      System.out.println(replyDTO.getReplyIdx());
+      System.out.println(replyDTO.getComment());
+      System.out.println(replyDTO.getCreateDate());
+      System.out.println(replyDTO.getUserId());
+    }
     return result;
   }
 
@@ -46,4 +49,18 @@ public class ReplyController {
                          @PathVariable("replyWriteComment") String replyWriteComment) {
     replyService.replyWrite(crewBoardIdx, replyWriteComment);
   }
+
+  //  댓글 수정(아이디가 일치하는지?)
+  @ResponseBody
+  @PutMapping("/modify/{replyIdx}")
+  public void replyModify(@PathVariable("replyIdx") int replyIdx){
+//    replyService.replyModify();
+  }
+
+  //  댓글 삭제
+  @ResponseBody
+  @DeleteMapping("/delete/{replyIdx}")
+  public void replyDelete(@PathVariable("replyIdx") int replyIdx) {
+    replyService.replyDelete(replyIdx);
+  }
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
index 6dcb1bd..14e643e 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
@@ -22,4 +22,16 @@ public interface ReplyRepository extends JpaRepository<ReplyEntity, Integer> {
           "values (:crewBoardIdx, 2, :replyWriteComment)", nativeQuery = true)
   void replyWrite(@RequestParam("crewBoardIdx") int crewBoardIdx,
                   @RequestParam("replyWriteComment") String replyWriteComment);
+
+  //  댓글 수정
+  @Modifying
+  @Query("update ReplyEntity r set r.comment= :newReplyComment where r.reply_idx = :replyIdx")
+  void replyModify(@RequestParam("newReplyComment") String newReplyComment,
+                   @RequestParam("replyIdx") int replyIdx);
+
+  //  댓글 삭제
+  @Modifying
+  @Transactional
+  @Query("delete from ReplyEntity where reply_idx = :replyIdx")
+  void replyDelete(@RequestParam("replyIdx") int replyIdx);
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
index cc54e8c..d780674 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyService.java
@@ -1,6 +1,7 @@
 package bitc.fullstack503.e2teamproject.service;
 
 import bitc.fullstack503.e2teamproject.entity.ReplyEntity;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.bind.annotation.RequestParam;
 
 import java.util.List;
@@ -12,4 +13,7 @@ public interface ReplyService {
   //  댓글 쓰기
   void replyWrite(@RequestParam("crewBoardIdx") int crewBoardIdx,
                   @RequestParam("replyWriteComment") String replyWriteComment);
+
+  //  댓글 삭제
+  void replyDelete(@RequestParam("replyIdx") int replyIdx);
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
index 5f012d0..0fd4f18 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
@@ -4,6 +4,8 @@ import bitc.fullstack503.e2teamproject.entity.ReplyEntity;
 import bitc.fullstack503.e2teamproject.repository.ReplyRepository;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+import org.springframework.web.bind.annotation.RequestParam;
 
 import java.util.List;
 
@@ -15,7 +17,7 @@ public class ReplyServiceImpl implements ReplyService {
 
   //  댓글 보기
   @Override
-  public List<ReplyEntity> replyShow(int crewBoardIdx){
+  public List<ReplyEntity> replyShow(int crewBoardIdx) {
     return replyRepository.replyShow(crewBoardIdx);
   }
 
@@ -24,4 +26,12 @@ public class ReplyServiceImpl implements ReplyService {
   public void replyWrite(int crewBoardIdx, String replyWriteComment) {
     replyRepository.replyWrite(crewBoardIdx, replyWriteComment);
   }
+
+//  댓글 수정
+
+  //  댓글 삭제
+  @Override
+  public void replyDelete(int replyIdx) {
+    replyRepository.replyDelete(replyIdx);
+  }
 }
diff --git a/src/main/resources/templates/board/crewDetailPage.html b/src/main/resources/templates/board/crewDetailPage.html
index 6df8365..9c25b93 100644
--- a/src/main/resources/templates/board/crewDetailPage.html
+++ b/src/main/resources/templates/board/crewDetailPage.html
@@ -36,10 +36,13 @@
 
                   data.replyList.forEach(reply => {
                       let html = `<div style='padding: 10px 10px 0 10px;'>`;
+                      html += `<input type="hidden" value="${reply.replyIdx}" class="replyIdx" id="replyIdx">`
                       html += `<span style='font-weight: bold;' class='replyId'>${reply.userId}</span>`;
                       html += `<span style='font-size: small' class='replyWriteDate'>${reply.createDate}</span>`;
-                      html += `</div>`
                       html += `<div class='mt-2 replyContent' style='padding: 0 10px 10px 10px;'>${reply.comment}</div>`;
+                      html += `<button type="button" class="modifyReplyButton">수정</button>`;
+                      html += `<button type="button" class="deleteReplyButton">삭제</button>`;
+                      html += `</div>`
 
                       replyShowBox.append(html);
                   });
@@ -65,8 +68,32 @@
               });
           });
 
-      })
-      ;
+          // 댓글 수정
+          $(document).on("click", ".modifyReplyButton", function () {
+              console.log("댓글 수정 버튼");
+              let replyIdx = $(this).closest("div div").find(".replyIdx").val();
+              let replyUserId = $(this).closest("div div").find(".replyId").text();
+              console.log(`글 번호 : ${replyIdx}`);
+              console.log(`글쓴이 : ${replyUserId}`);
+          });
+
+          // 댓글 삭제
+          $(document).on("click", ".deleteReplyButton", function () {
+              let replyIdx = $(this).closest("div div").find(".replyIdx").val();
+              $.ajax({
+                  url: `/reply/delete/${replyIdx}`,
+                  type: 'delete',
+                  data: {"replyIdx": replyIdx},
+                  success: function () {
+                      alert("댓글 삭제 완료");
+                      location.reload();
+                  },
+                  error: function () {
+                      alert("댓글 삭제 실패");
+                  }
+              });
+          });
+      });
   </script>
 </head>
 <body>
@@ -126,11 +153,6 @@
         <i class="fa-regular fa-comment"></i> 댓글
       </div>
       <div class="mt-3 replyShowBox" style="border: 0.4px solid lightgray; border-radius: 5px;">
-        <!--        <div style="padding: 10px 10px 0 10px;">-->
-        <!--          <span style="font-weight: bold;" class="replyId">ID </span>-->
-        <!--          <span style="font-size: small" class="replyWriteDate"> 작성일</span>-->
-        <!--        </div>-->
-        <!--        <div class="mt-2 replyContent" style="padding: 0 10px 10px 10px;">review 내용</div>-->
       </div>
     </div>
     <div class="d-flex justify-content-between mt-5"
-- 
2.47.0.windows.2

From 444b1860de3d0812eabc52e006cd783b94433307 Mon Sep 17 00:00:00 2001
From: void-alive <sja9284@gmail.com>
Date: Tue, 18 Feb 2025 15:44:19 +0900
Subject: [PATCH] =?UTF-8?q?toast=20ui=20=EC=8B=A4=ED=97=98=EC=9A=A9=20?=
 =?UTF-8?q?=EC=B6=94=EA=B0=80?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../controller/BoardController.java           |  7 ++
 .../controller/BoardImageController.java      | 79 ++++++++++++++++++-
 .../controller/ReplyController.java           | 14 ----
 .../repository/ReplyRepository.java           |  6 --
 .../service/ReplyServiceImpl.java             |  2 -
 .../templates/board/crewDetailPage.html       | 10 ---
 .../templates/board/jiHyunToastTest.html      | 63 +++++++++++++++
 7 files changed, 148 insertions(+), 33 deletions(-)
 create mode 100644 src/main/resources/templates/board/jiHyunToastTest.html

diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java
index 0ed1560..6fb058b 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardController.java
@@ -37,6 +37,13 @@ public class BoardController {
     return mav;
   }
 
+  //  심지현 tostEditor 테스트용
+  @RequestMapping("/jiHyunToast")
+  public ModelAndView jihyunToast() {
+    ModelAndView mav = new ModelAndView("/board/jiHyunToastTest");
+    return mav;
+  }
+
   // 프로필
   @RequestMapping("/pro")
   public ModelAndView profile() {
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardImageController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardImageController.java
index 054a0fc..f50573f 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardImageController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/BoardImageController.java
@@ -2,13 +2,28 @@ package bitc.fullstack503.e2teamproject.controller;
 
 import bitc.fullstack503.e2teamproject.service.BoardImageService;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.http.MediaType;
 import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.web.multipart.MultipartFile;
 
+import java.io.File;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Paths;
+import java.util.UUID;
+
+import static jakarta.persistence.GenerationType.UUID;
+
+@RestController
 @Controller
 @RequestMapping("/boardImage")
 public class BoardImageController {
 
+  @Value("${file.dir}")
+  private String fileDirection;
+
   @Autowired
   private BoardImageService boardImageService;
 
@@ -16,4 +31,66 @@ public class BoardImageController {
   public String boardImage() {
     return "boardImage";
   }
+
+  //  실험용
+  @ResponseBody
+  @PostMapping("/image-upload")
+  public String uploadEditorImage(@RequestParam final MultipartFile image) {
+    if (image.isEmpty()) {
+      return "";
+    }
+    String orgFilename = image.getOriginalFilename();                                         // 원본 파일명
+    String uuid = java.util.UUID.randomUUID().toString().replaceAll("-", "");          // 32자리 랜덤 문자열
+    String extension = orgFilename.substring(orgFilename.lastIndexOf(".") + 1);  // 확장자
+    String saveFilename = uuid + "." + extension;                                             // 디스크에 저장할 파일명
+    String fileFullPath = Paths.get(fileDirection, saveFilename).toString();
+
+    System.out.println("원본 파일 이름 : " + orgFilename);
+    System.out.println("uuid : " + uuid);
+    System.out.println("저장된 파일이름 : " + saveFilename);
+    System.out.println("파일 경로 : " + fileFullPath);
+
+    File dir = new File(fileDirection);
+    if (!dir.exists()) {
+      dir.mkdirs();
+    }
+
+    try {
+      // 파일 저장 (write to disk)
+      File uploadFile = new File(fileFullPath);
+      image.transferTo(uploadFile);
+      return saveFilename;
+
+    } catch (IOException e) {
+      // 예외 처리는 따로 해주는 게 좋습니다.
+      throw new RuntimeException(e);
+    }
+  }
+
+  /**
+   * 디스크에 업로드된 파일을 byte[]로 반환
+   * @param filename 디스크에 업로드된 파일명
+   * @return image byte array
+   */
+  @ResponseBody
+  @GetMapping(value = "/image-print", produces = { MediaType.IMAGE_GIF_VALUE, MediaType.IMAGE_JPEG_VALUE, MediaType.IMAGE_PNG_VALUE })
+  public byte[] printEditorImage(@RequestParam final String filename) {
+    // 업로드된 파일의 전체 경로
+    String fileFullPath = Paths.get(fileDirection, filename).toString();
+
+    // 파일이 없는 경우 예외 throw
+    File uploadedFile = new File(fileFullPath);
+    if (!uploadedFile.exists()) {
+      throw new RuntimeException();
+    }
+
+    try {
+      // 이미지 파일을 byte[]로 변환 후 반환
+      return Files.readAllBytes(uploadedFile.toPath());
+
+    } catch (IOException e) {
+      // 예외 처리는 따로 해주는 게 좋습니다.
+      throw new RuntimeException(e);
+    }
+  }
 }
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
index d4ce53e..4920a25 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/controller/ReplyController.java
@@ -32,13 +32,6 @@ public class ReplyController {
 
     Map<String, Object> result = new HashMap<>();
     result.put("replyList", replyList);
-
-    for (ReplyDTO replyDTO : replyList) {
-      System.out.println(replyDTO.getReplyIdx());
-      System.out.println(replyDTO.getComment());
-      System.out.println(replyDTO.getCreateDate());
-      System.out.println(replyDTO.getUserId());
-    }
     return result;
   }
 
@@ -50,13 +43,6 @@ public class ReplyController {
     replyService.replyWrite(crewBoardIdx, replyWriteComment);
   }
 
-  //  댓글 수정(아이디가 일치하는지?)
-  @ResponseBody
-  @PutMapping("/modify/{replyIdx}")
-  public void replyModify(@PathVariable("replyIdx") int replyIdx){
-//    replyService.replyModify();
-  }
-
   //  댓글 삭제
   @ResponseBody
   @DeleteMapping("/delete/{replyIdx}")
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
index 14e643e..8141515 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/repository/ReplyRepository.java
@@ -23,12 +23,6 @@ public interface ReplyRepository extends JpaRepository<ReplyEntity, Integer> {
   void replyWrite(@RequestParam("crewBoardIdx") int crewBoardIdx,
                   @RequestParam("replyWriteComment") String replyWriteComment);
 
-  //  댓글 수정
-  @Modifying
-  @Query("update ReplyEntity r set r.comment= :newReplyComment where r.reply_idx = :replyIdx")
-  void replyModify(@RequestParam("newReplyComment") String newReplyComment,
-                   @RequestParam("replyIdx") int replyIdx);
-
   //  댓글 삭제
   @Modifying
   @Transactional
diff --git a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
index 0fd4f18..18b778d 100644
--- a/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
+++ b/src/main/java/bitc/fullstack503/e2teamproject/service/ReplyServiceImpl.java
@@ -27,8 +27,6 @@ public class ReplyServiceImpl implements ReplyService {
     replyRepository.replyWrite(crewBoardIdx, replyWriteComment);
   }
 
-//  댓글 수정
-
   //  댓글 삭제
   @Override
   public void replyDelete(int replyIdx) {
diff --git a/src/main/resources/templates/board/crewDetailPage.html b/src/main/resources/templates/board/crewDetailPage.html
index 9c25b93..5093ab4 100644
--- a/src/main/resources/templates/board/crewDetailPage.html
+++ b/src/main/resources/templates/board/crewDetailPage.html
@@ -40,7 +40,6 @@
                       html += `<span style='font-weight: bold;' class='replyId'>${reply.userId}</span>`;
                       html += `<span style='font-size: small' class='replyWriteDate'>${reply.createDate}</span>`;
                       html += `<div class='mt-2 replyContent' style='padding: 0 10px 10px 10px;'>${reply.comment}</div>`;
-                      html += `<button type="button" class="modifyReplyButton">수정</button>`;
                       html += `<button type="button" class="deleteReplyButton">삭제</button>`;
                       html += `</div>`
 
@@ -68,15 +67,6 @@
               });
           });
 
-          // 댓글 수정
-          $(document).on("click", ".modifyReplyButton", function () {
-              console.log("댓글 수정 버튼");
-              let replyIdx = $(this).closest("div div").find(".replyIdx").val();
-              let replyUserId = $(this).closest("div div").find(".replyId").text();
-              console.log(`글 번호 : ${replyIdx}`);
-              console.log(`글쓴이 : ${replyUserId}`);
-          });
-
           // 댓글 삭제
           $(document).on("click", ".deleteReplyButton", function () {
               let replyIdx = $(this).closest("div div").find(".replyIdx").val();
diff --git a/src/main/resources/templates/board/jiHyunToastTest.html b/src/main/resources/templates/board/jiHyunToastTest.html
new file mode 100644
index 0000000..9b0dcd2
--- /dev/null
+++ b/src/main/resources/templates/board/jiHyunToastTest.html
@@ -0,0 +1,63 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+  <meta charset="UTF-8">
+  <title>jiHyunToastTest</title>
+  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
+        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
+  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
+          integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
+          crossorigin="anonymous"></script>
+  <script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4="
+          crossorigin="anonymous"></script>
+  <link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css"/>
+
+</head>
+<body>
+<div id="content">
+</div>
+<script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js"></script>
+<script>
+    const editor = new toastui.Editor({
+        el: document.querySelector('#content'), // 에디터를 적용할 요소 (컨테이너)
+        height: '500px',                        // 에디터 영역의 높이 값 (OOOpx || auto)
+        initialEditType: 'markdown',            // 최초로 보여줄 에디터 타입 (markdown || wysiwyg)
+        initialValue: '내용을 입력해 주세요.',     // 내용의 초기 값으로, 반드시 마크다운 문자열 형태여야 함
+        previewStyle: 'vertical',
+
+        /* start of hooks */
+        hooks: {
+            async addImageBlobHook(blob, callback) { // 이미지 업로드 로직 커스텀
+                try {
+                    /*
+                     * 1. 에디터에 업로드한 이미지를 FormData 객체에 저장
+                     *    (이때, 컨트롤러 uploadEditorImage 메서드의 파라미터인 'image'와 formData에 append 하는 key('image')값은 동일해야 함)
+                     */
+                    const formData = new FormData();
+                    formData.append('image', blob);
+
+                    // 2. FileApiController - uploadEditorImage 메서드 호출
+                    const response = await fetch('/boardImage/image-upload', {
+                        method : 'POST',
+                        body : formData,
+                    });
+
+                    // 3. 컨트롤러에서 전달받은 디스크에 저장된 파일명
+                    const filename = await response.text();
+                    console.log('서버에 저장된 파일명 : ', filename);
+
+                    // 4. addImageBlobHook의 callback 함수를 통해, 디스크에 저장된 이미지를 에디터에 렌더링
+                    const imageUrl = `/boardImage/image-print?filename=${filename}`;
+                    callback(imageUrl, 'image alt attribute');
+
+                } catch (error) {
+                    console.error('업로드 실패 : ', error);
+                }
+            }
+        }
+        /* end of hooks */
+    });
+</script>
+
+</body>
+</html>
\ No newline at end of file
-- 
2.47.0.windows.2

